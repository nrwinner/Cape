/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  ButtonStyle,
} from './components/button/button';

export namespace Components {
  interface CapeButton {
    'buttonColor': string;
    'buttonDisabled': boolean;
    'buttonStyle': ButtonStyle;
  }
  interface CapeTextInput {
    'inputColor': string;
    'placeholder': string;
    'type': string;
    'value': string;
  }
}

declare global {


  interface HTMLCapeButtonElement extends Components.CapeButton, HTMLStencilElement {}
  var HTMLCapeButtonElement: {
    prototype: HTMLCapeButtonElement;
    new (): HTMLCapeButtonElement;
  };

  interface HTMLCapeTextInputElement extends Components.CapeTextInput, HTMLStencilElement {}
  var HTMLCapeTextInputElement: {
    prototype: HTMLCapeTextInputElement;
    new (): HTMLCapeTextInputElement;
  };
  interface HTMLElementTagNameMap {
    'cape-button': HTMLCapeButtonElement;
    'cape-text-input': HTMLCapeTextInputElement;
  }
}

declare namespace LocalJSX {
  interface CapeButton {
    'buttonColor'?: string;
    'buttonDisabled'?: boolean;
    'buttonStyle'?: ButtonStyle;
    'onOnclick'?: (event: CustomEvent<any>) => void;
  }
  interface CapeTextInput {
    'inputColor'?: string;
    'onOnblur'?: (event: CustomEvent<any>) => void;
    'onOnfocus'?: (event: CustomEvent<any>) => void;
    'onOninput'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'type'?: string;
    'value'?: string;
  }

  interface IntrinsicElements {
    'cape-button': CapeButton;
    'cape-text-input': CapeTextInput;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'cape-button': LocalJSX.CapeButton & JSXBase.HTMLAttributes<HTMLCapeButtonElement>;
      'cape-text-input': LocalJSX.CapeTextInput & JSXBase.HTMLAttributes<HTMLCapeTextInputElement>;
    }
  }
}


