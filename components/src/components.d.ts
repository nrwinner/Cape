/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  ButtonStyle,
} from './components/button/button';
import {
  ToolTipPosition,
  ToolTipTrigger,
} from './components/tool-tip/tool-tip';

export namespace Components {
  interface CapeButton {
    'accentColor': string;
    'buttonDisabled': boolean;
    'buttonStyle': ButtonStyle;
  }
  interface CapeDropdown {
    'currentlySelected': string;
  }
  interface CapeSwitch {
    'accentColor': string;
    'activated': boolean;
    'disabled': boolean;
    'label': string;
  }
  interface CapeTextInput {
    'inputColor': string;
    'placeholder': string;
    'readonly': boolean;
    'type': string;
    'value': string;
  }
  interface CapeToolTip {
    'delay': number;
    'persist': number;
    'position': ToolTipPosition;
    'tip': string;
    'triggerEvent': ToolTipTrigger;
  }
}

declare global {


  interface HTMLCapeButtonElement extends Components.CapeButton, HTMLStencilElement {}
  var HTMLCapeButtonElement: {
    prototype: HTMLCapeButtonElement;
    new (): HTMLCapeButtonElement;
  };

  interface HTMLCapeDropdownElement extends Components.CapeDropdown, HTMLStencilElement {}
  var HTMLCapeDropdownElement: {
    prototype: HTMLCapeDropdownElement;
    new (): HTMLCapeDropdownElement;
  };

  interface HTMLCapeSwitchElement extends Components.CapeSwitch, HTMLStencilElement {}
  var HTMLCapeSwitchElement: {
    prototype: HTMLCapeSwitchElement;
    new (): HTMLCapeSwitchElement;
  };

  interface HTMLCapeTextInputElement extends Components.CapeTextInput, HTMLStencilElement {}
  var HTMLCapeTextInputElement: {
    prototype: HTMLCapeTextInputElement;
    new (): HTMLCapeTextInputElement;
  };

  interface HTMLCapeToolTipElement extends Components.CapeToolTip, HTMLStencilElement {}
  var HTMLCapeToolTipElement: {
    prototype: HTMLCapeToolTipElement;
    new (): HTMLCapeToolTipElement;
  };
  interface HTMLElementTagNameMap {
    'cape-button': HTMLCapeButtonElement;
    'cape-dropdown': HTMLCapeDropdownElement;
    'cape-switch': HTMLCapeSwitchElement;
    'cape-text-input': HTMLCapeTextInputElement;
    'cape-tool-tip': HTMLCapeToolTipElement;
  }
}

declare namespace LocalJSX {
  interface CapeButton {
    'accentColor'?: string;
    'buttonDisabled'?: boolean;
    'buttonStyle'?: ButtonStyle;
    'onOnclick'?: (event: CustomEvent<any>) => void;
  }
  interface CapeDropdown {
    'currentlySelected'?: string;
    'onSelected'?: (event: CustomEvent<any>) => void;
  }
  interface CapeSwitch {
    'accentColor'?: string;
    'activated'?: boolean;
    'disabled'?: boolean;
    'label'?: string;
    'onOntoggle'?: (event: CustomEvent<any>) => void;
  }
  interface CapeTextInput {
    'inputColor'?: string;
    'onOnblur'?: (event: CustomEvent<any>) => void;
    'onOnfocus'?: (event: CustomEvent<any>) => void;
    'onOninput'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'readonly'?: boolean;
    'type'?: string;
    'value'?: string;
  }
  interface CapeToolTip {
    'delay'?: number;
    'persist'?: number;
    'position'?: ToolTipPosition;
    'tip'?: string;
    'triggerEvent'?: ToolTipTrigger;
  }

  interface IntrinsicElements {
    'cape-button': CapeButton;
    'cape-dropdown': CapeDropdown;
    'cape-switch': CapeSwitch;
    'cape-text-input': CapeTextInput;
    'cape-tool-tip': CapeToolTip;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'cape-button': LocalJSX.CapeButton & JSXBase.HTMLAttributes<HTMLCapeButtonElement>;
      'cape-dropdown': LocalJSX.CapeDropdown & JSXBase.HTMLAttributes<HTMLCapeDropdownElement>;
      'cape-switch': LocalJSX.CapeSwitch & JSXBase.HTMLAttributes<HTMLCapeSwitchElement>;
      'cape-text-input': LocalJSX.CapeTextInput & JSXBase.HTMLAttributes<HTMLCapeTextInputElement>;
      'cape-tool-tip': LocalJSX.CapeToolTip & JSXBase.HTMLAttributes<HTMLCapeToolTipElement>;
    }
  }
}


